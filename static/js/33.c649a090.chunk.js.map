{"version":3,"file":"static/js/33.c649a090.chunk.js","mappings":"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","sources":["pages/Browse.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport PetCard from \"../components/PetCard\";\nimport api from \"../services/api\";\n\nconst Browse = () => {\n  const [pets, setPets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [filters, setFilters] = useState({\n    type: \"all\",\n    size: \"\",\n    minPrice: \"\",\n    maxPrice: \"\",\n    search: \"\",\n    sort: \"newest\",\n  });\n\n  useEffect(() => {\n    const fetchPets = async () => {\n      setLoading(true);\n      setError(\"\");\n\n      try {\n        const params = new URLSearchParams();\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value && value !== \"all\") {\n            params.append(key, value);\n          }\n        });\n\n        const response = await api.get(`/pets?${params.toString()}`);\n        setPets(response.data.data);\n      } catch (error) {\n        setError(\"Error fetching pets. Please try again.\");\n        console.error(\"Error fetching pets:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPets();\n  }, [filters]);\n\n  const handleFilterChange = (field, value) => {\n    setFilters((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleVote = (petId, voteType) => {\n    setPets((prev) =>\n      prev.map((pet) => {\n        if (pet._id === petId) {\n          const newPet = { ...pet };\n          if (voteType === \"up\") {\n            newPet.votes = { ...newPet.votes, up: (newPet.votes?.up || 0) + 1 };\n          } else {\n            newPet.votes = {\n              ...newPet.votes,\n              down: (newPet.votes?.down || 0) + 1,\n            };\n          }\n          return newPet;\n        }\n        return pet;\n      }),\n    );\n  };\n\n  const clearFilters = () => {\n    setFilters({\n      type: \"all\",\n      size: \"\",\n      minPrice: \"\",\n      maxPrice: \"\",\n      search: \"\",\n      sort: \"newest\",\n    });\n  };\n\n  return (\n    <Container className=\"py-5\" style={{ marginTop: \"80px\" }}>\n      <h2 className=\"text-center mb-4\">Browse All Pets</h2>\n\n      {/* Filters */}\n      <Row className=\"mb-4\">\n        <Col>\n          <Form className=\"p-3 bg-light rounded\">\n            <Row className=\"g-3\">\n              <Col md={2}>\n                <Form.Label>Type</Form.Label>\n                <Form.Select\n                  value={filters.type}\n                  onChange={(e) => handleFilterChange(\"type\", e.target.value)}\n                >\n                  <option value=\"all\">All Types</option>\n                  <option value=\"dog\">Dogs</option>\n                  <option value=\"cat\">Cats</option>\n                  <option value=\"fish\">Fish</option>\n                  <option value=\"bird\">Birds</option>\n                  <option value=\"small-pet\">Small Pets</option>\n                  <option value=\"supply\">Supplies</option>\n                </Form.Select>\n              </Col>\n\n              <Col md={2}>\n                <Form.Label>Size</Form.Label>\n                <Form.Select\n                  value={filters.size}\n                  onChange={(e) => handleFilterChange(\"size\", e.target.value)}\n                >\n                  <option value=\"\">Any Size</option>\n                  <option value=\"small\">Small</option>\n                  <option value=\"medium\">Medium</option>\n                  <option value=\"large\">Large</option>\n                  <option value=\"extra-large\">Extra Large</option>\n                </Form.Select>\n              </Col>\n\n              <Col md={1}>\n                <Form.Label>Min Price</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"$0\"\n                  value={filters.minPrice}\n                  onChange={(e) =>\n                    handleFilterChange(\"minPrice\", e.target.value)\n                  }\n                />\n              </Col>\n\n              <Col md={1}>\n                <Form.Label>Max Price</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"$999\"\n                  value={filters.maxPrice}\n                  onChange={(e) =>\n                    handleFilterChange(\"maxPrice\", e.target.value)\n                  }\n                />\n              </Col>\n\n              <Col md={2}>\n                <Form.Label>Sort By</Form.Label>\n                <Form.Select\n                  value={filters.sort}\n                  onChange={(e) => handleFilterChange(\"sort\", e.target.value)}\n                >\n                  <option value=\"newest\">Newest</option>\n                  <option value=\"price-low\">Price: Low to High</option>\n                  <option value=\"price-high\">Price: High to Low</option>\n                  <option value=\"popular\">Most Popular</option>\n                </Form.Select>\n              </Col>\n\n              <Col md={3}>\n                <Form.Label>Search</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Search pets...\"\n                  value={filters.search}\n                  onChange={(e) => handleFilterChange(\"search\", e.target.value)}\n                />\n              </Col>\n\n              <Col md={1} className=\"d-flex align-items-end\">\n                <Button variant=\"outline-secondary\" onClick={clearFilters}>\n                  Clear\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n\n      {/* Results */}\n      {error && (\n        <Alert variant=\"danger\" className=\"mb-4\">\n          {error}\n        </Alert>\n      )}\n\n      {loading ? (\n        <div className=\"loading-spinner\">\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </div>\n      ) : (\n        <>\n          <div className=\"mb-3\">\n            <span className=\"text-muted\">\n              {pets.length} pet{pets.length !== 1 ? \"s\" : \"\"} found\n            </span>\n          </div>\n\n          <Row className=\"g-4\">\n            {pets.map((pet) => (\n              <Col key={pet._id} sm={6} md={4} lg={3}>\n                <PetCard pet={pet} onVote={handleVote} />\n              </Col>\n            ))}\n          </Row>\n\n          {pets.length === 0 && (\n            <div className=\"text-center py-5\">\n              <i className=\"fas fa-search fa-3x text-muted mb-3\"></i>\n              <h4>No pets found</h4>\n              <p className=\"text-muted\">\n                Try adjusting your filters or search terms.\n              </p>\n            </div>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Browse;\n"],"names":["Browse","pets","setPets","useState","loading","setLoading","error","setError","filters","setFilters","type","size","minPrice","maxPrice","search","sort","useEffect","async","params","URLSearchParams","Object","entries","forEach","_ref","key","value","append","response","api","get","concat","toString","data","console","fetchPets","handleFilterChange","field","prev","_objectSpread","handleVote","petId","voteType","map","pet","_id","newPet","_newPet$votes","_newPet$votes2","votes","up","down","_jsxs","Container","className","style","marginTop","children","_jsx","Row","Col","Form","md","Label","Select","onChange","e","target","Control","placeholder","Button","variant","onClick","clearFilters","Alert","Spinner","animation","role","_Fragment","length","sm","lg","PetCard","onVote"],"sourceRoot":""}