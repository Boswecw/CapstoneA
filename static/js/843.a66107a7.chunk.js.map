{"version":3,"file":"static/js/843.a66107a7.chunk.js","mappings":"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","sources":["pages/PetDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Container, Row, Col, Card, Button, Badge, Form, Alert, Spinner } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\n\nconst PetDetail = () => {\n  const { id } = useParams();\n  const { user } = useAuth();\n  const [pet, setPet] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [rating, setRating] = useState(5);\n  const [comment, setComment] = useState('');\n  const [submittingRating, setSubmittingRating] = useState(false);\n\n  useEffect(() => {\n    fetchPet();\n  }, [id]);\n\n  const fetchPet = async () => {\n    try {\n      const response = await api.get(`/pets/${id}`);\n      setPet(response.data.data);\n    } catch (error) {\n      setError('Pet not found');\n      console.error('Error fetching pet:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleVote = async (voteType) => {\n    if (!user) return;\n    \n    try {\n      await api.post(`/pets/${id}/vote`, { voteType });\n      fetchPet(); // Refresh pet data\n    } catch (error) {\n      console.error('Error voting:', error);\n    }\n  };\n\n  const handleRating = async (e) => {\n    e.preventDefault();\n    if (!user || submittingRating) return;\n    \n    setSubmittingRating(true);\n    try {\n      await api.post(`/pets/${id}/rate`, { rating, comment });\n      setComment('');\n      fetchPet(); // Refresh pet data\n    } catch (error) {\n      console.error('Error submitting rating:', error);\n    } finally {\n      setSubmittingRating(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"py-5 text-center\" style={{ marginTop: '80px' }}>\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      </Container>\n    );\n  }\n\n  if (error || !pet) {\n    return (\n      <Container className=\"py-5\" style={{ marginTop: '80px' }}>\n        <Alert variant=\"danger\">\n          <h4>Pet Not Found</h4>\n          <p>The pet you're looking for doesn't exist or has been removed.</p>\n          <Link to=\"/browse\" className=\"btn btn-primary\">\n            Browse All Pets\n          </Link>\n        </Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"py-5\" style={{ marginTop: '80px' }}>\n      <Row>\n        <Col md={6}>\n          <Card>\n            <Card.Img \n              variant=\"top\" \n              src={pet.image} \n              alt={pet.name}\n              style={{ height: '400px', objectFit: 'contain' }}\n            />\n          </Card>\n        </Col>\n        \n        <Col md={6}>\n          <div className=\"d-flex justify-content-between align-items-start mb-3\">\n            <h1>{pet.name}</h1>\n            <Badge bg={pet.available ? 'success' : 'secondary'} className=\"fs-6\">\n              {pet.available ? 'Available' : 'Adopted'}\n            </Badge>\n          </div>\n          \n          <h3 className=\"text-success mb-3\">\n            ${typeof pet.price === 'number' ? pet.price.toLocaleString() : pet.price}\n          </h3>\n          \n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Row>\n                <Col sm={6}>\n                  <p><strong>Type:</strong> {pet.type}</p>\n                  <p><strong>Breed:</strong> {pet.breed}</p>\n                  <p><strong>Age:</strong> {pet.age}</p>\n                </Col>\n                <Col sm={6}>\n                  {pet.size && <p><strong>Size:</strong> {pet.size}</p>}\n                  {pet.gender && <p><strong>Gender:</strong> {pet.gender}</p>}\n                  <p><strong>Posted:</strong> {new Date(pet.createdAt).toLocaleDateString()}</p>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n          \n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Description</Card.Title>\n              <Card.Text>{pet.description}</Card.Text>\n            </Card.Body>\n          </Card>\n          \n          {/* Voting */}\n          {user && (\n            <div className=\"d-flex gap-2 mb-3\">\n              <Button\n                variant=\"outline-success\"\n                onClick={() => handleVote('up')}\n                disabled={!pet.available}\n              >\n                <i className=\"fas fa-thumbs-up me-1\"></i>\n                Upvote ({pet.votes?.up || 0})\n              </Button>\n              <Button\n                variant=\"outline-danger\"\n                onClick={() => handleVote('down')}\n                disabled={!pet.available}\n              >\n                <i className=\"fas fa-thumbs-down me-1\"></i>\n                Downvote ({pet.votes?.down || 0})\n              </Button>\n            </div>\n          )}\n          \n          {/* Contact Button */}\n          <Link to=\"/contact\" className=\"btn btn-primary btn-lg\">\n            <i className=\"fas fa-envelope me-2\"></i>\n            Contact About {pet.name}\n          </Link>\n        </Col>\n      </Row>\n      \n      {/* Ratings Section */}\n      <Row className=\"mt-5\">\n        <Col>\n          <h3>Ratings & Reviews</h3>\n          \n          {pet.ratings && pet.ratings.length > 0 && (\n            <div className=\"mb-3\">\n              <div className=\"d-flex align-items-center mb-2\">\n                <div className=\"display-6 me-3\">{pet.averageRating}</div>\n                <div>\n                  <div>\n                    {[...Array(5)].map((_, i) => (\n                      <i \n                        key={i}\n                        className={`fas fa-star ${i < Math.floor(pet.averageRating) ? 'text-warning' : 'text-muted'}`}\n                      ></i>\n                    ))}\n                  </div>\n                  <small className=\"text-muted\">\n                    Based on {pet.ratings.length} review{pet.ratings.length !== 1 ? 's' : ''}\n                  </small>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {/* Add Rating Form */}\n          {user && (\n            <Card className=\"mb-4\">\n              <Card.Body>\n                <Card.Title>Leave a Review</Card.Title>\n                <Form onSubmit={handleRating}>\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Rating</Form.Label>\n                    <Form.Select \n                      value={rating} \n                      onChange={(e) => setRating(parseInt(e.target.value))}\n                    >\n                      <option value={5}>5 Stars - Excellent</option>\n                      <option value={4}>4 Stars - Very Good</option>\n                      <option value={3}>3 Stars - Good</option>\n                      <option value={2}>2 Stars - Fair</option>\n                      <option value={1}>1 Star - Poor</option>\n                    </Form.Select>\n                  </Form.Group>\n                  \n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Comment (Optional)</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={3}\n                      value={comment}\n                      onChange={(e) => setComment(e.target.value)}\n                      placeholder=\"Share your thoughts about this pet...\"\n                    />\n                  </Form.Group>\n                  \n                  <Button \n                    type=\"submit\" \n                    variant=\"primary\"\n                    disabled={submittingRating}\n                  >\n                    {submittingRating ? 'Submitting...' : 'Submit Review'}\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          )}\n          \n          {/* Display Reviews */}\n          {pet.ratings && pet.ratings.map((review, index) => (\n            <Card key={index} className=\"mb-3\">\n              <Card.Body>\n                <div className=\"d-flex justify-content-between align-items-start mb-2\">\n                  <div>\n                    <strong>{review.user?.username || 'Anonymous'}</strong>\n                    <div>\n                      {[...Array(5)].map((_, i) => (\n                        <i \n                          key={i}\n                          className={`fas fa-star ${i < review.rating ? 'text-warning' : 'text-muted'}`}\n                        ></i>\n                      ))}\n                    </div>\n                  </div>\n                  <small className=\"text-muted\">\n                    {new Date(review.createdAt).toLocaleDateString()}\n                  </small>\n                </div>\n                {review.comment && <Card.Text>{review.comment}</Card.Text>}\n              </Card.Body>\n            </Card>\n          ))}\n          \n          {(!pet.ratings || pet.ratings.length === 0) && (\n            <Alert variant=\"info\">\n              No reviews yet. Be the first to review {pet.name}!\n            </Alert>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PetDetail;"],"names":["PetDetail","_pet$votes","_pet$votes2","id","useParams","user","useAuth","pet","setPet","useState","loading","setLoading","error","setError","rating","setRating","comment","setComment","submittingRating","setSubmittingRating","useEffect","fetchPet","async","response","api","get","concat","data","console","handleVote","post","voteType","_jsx","Container","className","style","marginTop","children","Spinner","animation","role","_jsxs","Alert","variant","Link","to","Row","Col","md","Card","Img","src","image","alt","name","height","objectFit","Badge","bg","available","price","toLocaleString","Body","sm","type","breed","age","size","gender","Date","createdAt","toLocaleDateString","Title","Text","description","Button","onClick","disabled","votes","up","down","ratings","length","averageRating","Array","map","_","i","Math","floor","Form","onSubmit","e","preventDefault","Group","Label","Select","value","onChange","parseInt","target","Control","as","rows","placeholder","review","index","_review$user","username"],"sourceRoot":""}