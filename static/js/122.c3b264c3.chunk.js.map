{"version":3,"file":"static/js/122.c3b264c3.chunk.js","mappings":"4QAcA,MA2QA,EA3QgBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACpB,MAAM,KAAEC,EAAMC,QAASC,IAAgBC,EAAAA,EAAAA,MAChCC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCL,EAASM,IAAcD,EAAAA,EAAAA,WAAS,IAChCE,EAAUC,IAAeH,EAAAA,EAAAA,WAAS,IAClCI,EAASC,IAAcL,EAAAA,EAAAA,UAAS,KAChCM,EAAOC,IAAYP,EAAAA,EAAAA,UAAS,KAEnCQ,EAAAA,EAAAA,WAAU,KACJd,GACFe,KAED,CAACf,IAEJ,MAAMe,EAAiBC,UACrB,IACET,GAAW,GACX,MAAMU,QAAiBC,EAAAA,EAAIC,IAAI,oBAC/Bd,EAAaY,EAASG,KAAKA,KAC7B,CAAE,MAAOR,GACPS,QAAQT,MAAM,4BAA6BA,GAC3CC,EAAS,0BACX,CAAC,QACCN,GAAW,EACb,GAwCF,OAAIL,GAEAoB,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,mBAAmBC,MAAO,CAAEC,UAAW,QAASC,SAAA,EACnEC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,UAAU,SAASC,KAAK,SAAQJ,UACvCC,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,kBAAiBG,SAAC,kBAEpCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BAMJ3B,GAWH4B,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACC,UAAU,OAAOC,MAAO,CAAEC,UAAW,QAASC,UACvDC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAAAL,UACFL,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACC,GAAI,EAAGV,UAAU,UAASG,SAAA,EAC7BL,EAAAA,EAAAA,MAACa,EAAAA,EAAI,CAAAR,SAAA,EACHL,EAAAA,EAAAA,MAACa,EAAAA,EAAKC,OAAM,CAAAT,SAAA,EACVL,EAAAA,EAAAA,MAAA,MAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,qBAAuB,iBAEtCF,EAAAA,EAAAA,MAAA,SAAOE,UAAU,aAAYG,SAAA,CAAC,iBAAe3B,EAAKqC,SAAS,WAE7Df,EAAAA,EAAAA,MAACa,EAAAA,EAAKG,KAAI,CAAAX,SAAA,CACPjB,IAAWkB,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACC,QAAQ,UAASb,SAAEjB,IACrCE,IAASgB,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACC,QAAQ,SAAQb,SAAEf,KAEnCU,EAAAA,EAAAA,MAACmB,EAAAA,EAAI,CAACC,SA1EG1B,UACnB2B,EAAEC,iBACFnC,GAAY,GACZE,EAAW,IACXE,EAAS,IAET,IACE,MAAMgC,EAAW,IAAIC,SAASH,EAAEI,QAC1BC,EAAU,CACdC,QAAS,CACPC,UAAWL,EAAS1B,IAAI,aACxBgC,SAAUN,EAAS1B,IAAI,YACvBiC,MAAOP,EAAS1B,IAAI,SACpBkC,QAAS,CACPC,OAAQT,EAAS1B,IAAI,UACrBoC,KAAMV,EAAS1B,IAAI,QACnBqC,MAAOX,EAAS1B,IAAI,SACpBsC,QAASZ,EAAS1B,IAAI,oBAKtBD,EAAAA,EAAIwC,IAAI,iBAAkBV,GAChCrC,EAAW,iCAIXgD,OAAOC,SAASC,QAClB,CAAE,MAAOjD,GACPC,EAAS,0BACTQ,QAAQT,MAAM,0BAA2BA,EAC3C,CAAC,QACCH,GAAY,EACd,GAyCuCkB,SAAA,EAC3BL,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAAAL,SAAA,EACFC,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,GAAI,EAAEP,UACTL,EAAAA,EAAAA,MAACmB,EAAAA,EAAKqB,MAAK,CAACtC,UAAU,OAAMG,SAAA,EAC1BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKsB,MAAK,CAAApC,SAAC,cACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKuB,QAAO,CACXC,KAAK,OACLC,MAAOlE,EAAKqC,UAAY,GACxB8B,UAAQ,KAEVvC,EAAAA,EAAAA,KAACa,EAAAA,EAAK2B,KAAI,CAAC5C,UAAU,aAAYG,SAAC,qCAKtCC,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,GAAI,EAAEP,UACTL,EAAAA,EAAAA,MAACmB,EAAAA,EAAKqB,MAAK,CAACtC,UAAU,OAAMG,SAAA,EAC1BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKsB,MAAK,CAAApC,SAAC,WACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKuB,QAAO,CACXC,KAAK,QACLC,MAAOlE,EAAKqE,OAAS,GACrBF,UAAQ,KAEVvC,EAAAA,EAAAA,KAACa,EAAAA,EAAK2B,KAAI,CAAC5C,UAAU,aAAYG,SAAC,qCAOxCL,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAAAL,SAAA,EACFC,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,GAAI,EAAEP,UACTL,EAAAA,EAAAA,MAACmB,EAAAA,EAAKqB,MAAK,CAACtC,UAAU,OAAMG,SAAA,EAC1BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKsB,MAAK,CAAApC,SAAC,gBACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKuB,QAAO,CACXC,KAAK,OACLK,KAAK,YACLC,cAA0B,QAAZlF,EAAAW,EAAKiD,eAAO,IAAA5D,OAAA,EAAZA,EAAc6D,YAAa,GACzCsB,YAAY,qBAIlB5C,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,GAAI,EAAEP,UACTL,EAAAA,EAAAA,MAACmB,EAAAA,EAAKqB,MAAK,CAACtC,UAAU,OAAMG,SAAA,EAC1BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKsB,MAAK,CAAApC,SAAC,eACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKuB,QAAO,CACXC,KAAK,OACLK,KAAK,WACLC,cAA0B,QAAZjF,EAAAU,EAAKiD,eAAO,IAAA3D,OAAA,EAAZA,EAAc6D,WAAY,GACxCqB,YAAY,uBAMpBlD,EAAAA,EAAAA,MAACmB,EAAAA,EAAKqB,MAAK,CAACtC,UAAU,OAAMG,SAAA,EAC1BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKsB,MAAK,CAAApC,SAAC,WACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKuB,QAAO,CACXC,KAAK,MACLK,KAAK,QACLC,cAA0B,QAAZhF,EAAAS,EAAKiD,eAAO,IAAA1D,OAAA,EAAZA,EAAc6D,QAAS,GACrCoB,YAAY,qBAIhB5C,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,YAAWG,SAAC,aAC1BL,EAAAA,EAAAA,MAACmB,EAAAA,EAAKqB,MAAK,CAACtC,UAAU,OAAMG,SAAA,EAC1BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKsB,MAAK,CAAApC,SAAC,oBACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKuB,QAAO,CACXC,KAAK,OACLK,KAAK,SACLC,cAA0B,QAAZ/E,EAAAQ,EAAKiD,eAAO,IAAAzD,GAAS,QAATC,EAAZD,EAAc6D,eAAO,IAAA5D,OAAT,EAAZA,EAAuB6D,SAAU,GAC/CkB,YAAY,uBAIhBlD,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAAAL,SAAA,EACFC,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,GAAI,EAAEP,UACTL,EAAAA,EAAAA,MAACmB,EAAAA,EAAKqB,MAAK,CAACtC,UAAU,OAAMG,SAAA,EAC1BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKsB,MAAK,CAAApC,SAAC,UACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKuB,QAAO,CACXC,KAAK,OACLK,KAAK,OACLC,cAA0B,QAAZ7E,EAAAM,EAAKiD,eAAO,IAAAvD,GAAS,QAATC,EAAZD,EAAc2D,eAAO,IAAA1D,OAAT,EAAZA,EAAuB4D,OAAQ,GAC7CiB,YAAY,eAIlB5C,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,GAAI,EAAEP,UACTL,EAAAA,EAAAA,MAACmB,EAAAA,EAAKqB,MAAK,CAACtC,UAAU,OAAMG,SAAA,EAC1BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKsB,MAAK,CAAApC,SAAC,WACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKuB,QAAO,CACXC,KAAK,OACLK,KAAK,QACLC,cAA0B,QAAZ3E,EAAAI,EAAKiD,eAAO,IAAArD,GAAS,QAATC,EAAZD,EAAcyD,eAAO,IAAAxD,OAAT,EAAZA,EAAuB2D,QAAS,GAC9CgB,YAAY,gBAIlB5C,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,GAAI,EAAEP,UACTL,EAAAA,EAAAA,MAACmB,EAAAA,EAAKqB,MAAK,CAACtC,UAAU,OAAMG,SAAA,EAC1BC,EAAAA,EAAAA,KAACa,EAAAA,EAAKsB,MAAK,CAAApC,SAAC,cACZC,EAAAA,EAAAA,KAACa,EAAAA,EAAKuB,QAAO,CACXC,KAAK,OACLK,KAAK,UACLC,cAA0B,QAAZzE,EAAAE,EAAKiD,eAAO,IAAAnD,GAAS,QAATC,EAAZD,EAAcuD,eAAO,IAAAtD,OAAT,EAAZA,EAAuB0D,UAAW,GAChDe,YAAY,sBAMpB5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACR,KAAK,SAASzB,QAAQ,UAAU2B,SAAU3D,EAASmB,SACxDnB,EAAW,cAAgB,6BAOpCc,EAAAA,EAAAA,MAACa,EAAAA,EAAI,CAACX,UAAU,OAAMG,SAAA,EACpBC,EAAAA,EAAAA,KAACO,EAAAA,EAAKC,OAAM,CAAAT,UACVL,EAAAA,EAAAA,MAAA,MAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,sBAAwB,kBACpCpB,EAAUsE,OAAO,UAGtB9C,EAAAA,EAAAA,KAACO,EAAAA,EAAKG,KAAI,CAAAX,SACP1B,GACCqB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaG,SAAA,EAC1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,UAAU,SAAS6C,KAAK,QACjC/C,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,OAAMG,SAAC,4BAEF,IAArBvB,EAAUsE,QACZ9C,EAAAA,EAAAA,KAAA,KAAGJ,UAAU,aAAYG,SAAC,uDAI1BC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACR,UAAU,MAAKG,SACjBvB,EAAUwE,IAAKC,IACdjD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAAeC,GAAI,EAAG4C,GAAI,EAAEnD,UAC9BL,EAAAA,EAAAA,MAACa,EAAAA,EAAI,CAACX,UAAU,QAAOG,SAAA,EACrBC,EAAAA,EAAAA,KAACO,EAAAA,EAAK4C,IAAG,CACPvC,QAAQ,MACRwC,IAAKH,EAAII,MACTC,IAAKL,EAAIP,KACT7C,MAAO,CAAE0D,OAAQ,QAASC,UAAW,cAEvC9D,EAAAA,EAAAA,MAACa,EAAAA,EAAKG,KAAI,CAAAX,SAAA,EACRC,EAAAA,EAAAA,KAACO,EAAAA,EAAKkD,MAAK,CAAC7D,UAAU,KAAIG,SAAEkD,EAAIP,QAChC1C,EAAAA,EAAAA,KAACO,EAAAA,EAAKiC,KAAI,CAAC5C,UAAU,QAAOG,SAAEkD,EAAIS,SAClChE,EAAAA,EAAAA,MAAA,OAAKE,UAAU,QAAOG,SAAA,CAAC,IAAEkD,EAAIU,gBAXzBV,EAAIW,qBAnK5B5D,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACC,UAAU,mBAAmBC,MAAO,CAAEC,UAAW,QAASC,UACnEC,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACC,QAAQ,SAAQb,SAAC,kD","sources":["pages/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n  Alert,\n  Spinner,\n} from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport api from \"../services/api\";\n\nconst Profile = () => {\n  const { user, loading: authLoading } = useAuth(); // Use the user from AuthContext\n  const [favorites, setFavorites] = useState([]);\n  const [loading, setLoading] = useState(false); // Separate loading for profile updates\n  const [updating, setUpdating] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (user) {\n      fetchFavorites();\n    }\n  }, [user]);\n\n  const fetchFavorites = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get(\"/users/favorites\");\n      setFavorites(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching favorites:\", error);\n      setError(\"Error loading favorites\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setUpdating(true);\n    setMessage(\"\");\n    setError(\"\");\n\n    try {\n      const formData = new FormData(e.target);\n      const updates = {\n        profile: {\n          firstName: formData.get(\"firstName\"),\n          lastName: formData.get(\"lastName\"),\n          phone: formData.get(\"phone\"),\n          address: {\n            street: formData.get(\"street\"),\n            city: formData.get(\"city\"),\n            state: formData.get(\"state\"),\n            zipCode: formData.get(\"zipCode\"),\n          },\n        },\n      };\n\n      await api.put(\"/users/profile\", updates);\n      setMessage(\"Profile updated successfully!\");\n      \n      // Optional: Refresh the AuthContext user data\n      // You might want to add a refreshUser function to AuthContext\n      window.location.reload(); // Simple refresh for now\n    } catch (error) {\n      setError(\"Error updating profile\");\n      console.error(\"Error updating profile:\", error);\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  // Show loading while authentication is being checked\n  if (authLoading) {\n    return (\n      <Container className=\"py-5 text-center\" style={{ marginTop: \"80px\" }}>\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n        <p>Loading profile...</p>\n      </Container>\n    );\n  }\n\n  // This shouldn't happen if ProtectedRoute is working, but just in case\n  if (!user) {\n    return (\n      <Container className=\"py-5 text-center\" style={{ marginTop: \"80px\" }}>\n        <Alert variant=\"danger\">\n          You must be logged in to view your profile.\n        </Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"py-5\" style={{ marginTop: \"80px\" }}>\n      <Row>\n        <Col md={8} className=\"mx-auto\">\n          <Card>\n            <Card.Header>\n              <h3>\n                <i className=\"fas fa-user me-2\"></i>My Profile\n              </h3>\n              <small className=\"text-muted\">Welcome back, {user.username}!</small>\n            </Card.Header>\n            <Card.Body>\n              {message && <Alert variant=\"success\">{message}</Alert>}\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n\n              <Form onSubmit={handleSubmit}>\n                <Row>\n                  <Col md={6}>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>Username</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        value={user.username || \"\"}\n                        disabled\n                      />\n                      <Form.Text className=\"text-muted\">\n                        Username cannot be changed\n                      </Form.Text>\n                    </Form.Group>\n                  </Col>\n                  <Col md={6}>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>Email</Form.Label>\n                      <Form.Control\n                        type=\"email\"\n                        value={user.email || \"\"}\n                        disabled\n                      />\n                      <Form.Text className=\"text-muted\">\n                        Email cannot be changed\n                      </Form.Text>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col md={6}>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>First Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"firstName\"\n                        defaultValue={user.profile?.firstName || \"\"}\n                        placeholder=\"First Name\"\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col md={6}>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>Last Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"lastName\"\n                        defaultValue={user.profile?.lastName || \"\"}\n                        placeholder=\"Last Name\"\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Phone</Form.Label>\n                  <Form.Control\n                    type=\"tel\"\n                    name=\"phone\"\n                    defaultValue={user.profile?.phone || \"\"}\n                    placeholder=\"Phone Number\"\n                  />\n                </Form.Group>\n\n                <h5 className=\"mt-4 mb-3\">Address</h5>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Street Address</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"street\"\n                    defaultValue={user.profile?.address?.street || \"\"}\n                    placeholder=\"Street Address\"\n                  />\n                </Form.Group>\n\n                <Row>\n                  <Col md={4}>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>City</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"city\"\n                        defaultValue={user.profile?.address?.city || \"\"}\n                        placeholder=\"City\"\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col md={4}>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>State</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"state\"\n                        defaultValue={user.profile?.address?.state || \"\"}\n                        placeholder=\"State\"\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col md={4}>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>ZIP Code</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"zipCode\"\n                        defaultValue={user.profile?.address?.zipCode || \"\"}\n                        placeholder=\"ZIP Code\"\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <Button type=\"submit\" variant=\"primary\" disabled={updating}>\n                  {updating ? \"Updating...\" : \"Update Profile\"}\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n\n          {/* Favorites Section */}\n          <Card className=\"mt-4\">\n            <Card.Header>\n              <h4>\n                <i className=\"fas fa-heart me-2\"></i>Favorite Pets (\n                {favorites.length})\n              </h4>\n            </Card.Header>\n            <Card.Body>\n              {loading ? (\n                <div className=\"text-center\">\n                  <Spinner animation=\"border\" size=\"sm\" />\n                  <span className=\"ms-2\">Loading favorites...</span>\n                </div>\n              ) : favorites.length === 0 ? (\n                <p className=\"text-muted\">\n                  You haven't added any pets to your favorites yet.\n                </p>\n              ) : (\n                <Row className=\"g-3\">\n                  {favorites.map((pet) => (\n                    <Col key={pet._id} md={6} lg={4}>\n                      <Card className=\"h-100\">\n                        <Card.Img\n                          variant=\"top\"\n                          src={pet.image}\n                          alt={pet.name}\n                          style={{ height: \"150px\", objectFit: \"contain\" }}\n                        />\n                        <Card.Body>\n                          <Card.Title className=\"h6\">{pet.name}</Card.Title>\n                          <Card.Text className=\"small\">{pet.breed}</Card.Text>\n                          <div className=\"price\">${pet.price}</div>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  ))}\n                </Row>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Profile;\n"],"names":["Profile","_user$profile","_user$profile2","_user$profile3","_user$profile4","_user$profile4$addres","_user$profile5","_user$profile5$addres","_user$profile6","_user$profile6$addres","_user$profile7","_user$profile7$addres","user","loading","authLoading","useAuth","favorites","setFavorites","useState","setLoading","updating","setUpdating","message","setMessage","error","setError","useEffect","fetchFavorites","async","response","api","get","data","console","_jsxs","Container","className","style","marginTop","children","_jsx","Spinner","animation","role","Row","Col","md","Card","Header","username","Body","Alert","variant","Form","onSubmit","e","preventDefault","formData","FormData","target","updates","profile","firstName","lastName","phone","address","street","city","state","zipCode","put","window","location","reload","Group","Label","Control","type","value","disabled","Text","email","name","defaultValue","placeholder","Button","length","size","map","pet","lg","Img","src","image","alt","height","objectFit","Title","breed","price","_id"],"sourceRoot":""}