{"version":3,"file":"static/js/843.d2460fcf.chunk.js","mappings":"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","sources":["pages/PetDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  Badge,\n  Form,\n  Alert,\n  Spinner,\n} from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport api from \"../services/api\";\n\nconst PetDetail = () => {\n  const { id } = useParams();\n  const { user } = useAuth();\n\n  const [pet, setPet] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [rating, setRating] = useState(5);\n  const [comment, setComment] = useState(\"\");\n  const [submittingRating, setSubmittingRating] = useState(false);\n\n  useEffect(() => {\n    const fetchPet = async () => {\n      try {\n        const response = await api.get(`/pets/${id}`);\n        setPet(response.data.data);\n      } catch (error) {\n        setError(\"Pet not found\");\n        console.error(\"Error fetching pet:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPet();\n  }, [id]);\n\n  const handleVote = async (voteType) => {\n    if (!user) return;\n\n    try {\n      await api.post(`/pets/${id}/vote`, { voteType });\n      const refreshed = await api.get(`/pets/${id}`);\n      setPet(refreshed.data.data);\n    } catch (error) {\n      console.error(\"Error voting:\", error);\n    }\n  };\n\n  const handleRating = async (e) => {\n    e.preventDefault();\n    if (!user || submittingRating) return;\n\n    setSubmittingRating(true);\n    try {\n      await api.post(`/pets/${id}/rate`, { rating, comment });\n      setComment(\"\");\n      const refreshed = await api.get(`/pets/${id}`);\n      setPet(refreshed.data.data);\n    } catch (error) {\n      console.error(\"Error submitting rating:\", error);\n    } finally {\n      setSubmittingRating(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"py-5 text-center\" style={{ marginTop: \"80px\" }}>\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      </Container>\n    );\n  }\n\n  if (error || !pet) {\n    return (\n      <Container className=\"py-5\" style={{ marginTop: \"80px\" }}>\n        <Alert variant=\"danger\">\n          <h4>Pet Not Found</h4>\n          <p>The pet you're looking for doesn't exist or has been removed.</p>\n          <Link to=\"/browse\" className=\"btn btn-primary\">\n            Browse All Pets\n          </Link>\n        </Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <Container className=\"py-5\" style={{ marginTop: \"80px\" }}>\n      <Row>\n        <Col md={6}>\n          <Card>\n            <Card.Img\n              variant=\"top\"\n              src={pet.image}\n              alt={pet.name}\n              style={{ height: \"400px\", objectFit: \"contain\" }}\n            />\n          </Card>\n        </Col>\n\n        <Col md={6}>\n          <div className=\"d-flex justify-content-between align-items-start mb-3\">\n            <h1>{pet.name}</h1>\n            <Badge\n              bg={pet.available ? \"success\" : \"secondary\"}\n              className=\"fs-6\"\n            >\n              {pet.available ? \"Available\" : \"Adopted\"}\n            </Badge>\n          </div>\n\n          <h3 className=\"text-success mb-3\">\n            {typeof pet.price === \"number\"\n              ? `$${pet.price.toLocaleString()}`\n              : pet.price}\n          </h3>\n\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Row>\n                <Col sm={6}>\n                  <p><strong>Type:</strong> {pet.type}</p>\n                  <p><strong>Breed:</strong> {pet.breed}</p>\n                  <p><strong>Age:</strong> {pet.age}</p>\n                </Col>\n                <Col sm={6}>\n                  {pet.size && <p><strong>Size:</strong> {pet.size}</p>}\n                  {pet.gender && <p><strong>Gender:</strong> {pet.gender}</p>}\n                  <p><strong>Posted:</strong> {new Date(pet.createdAt).toLocaleDateString()}</p>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Description</Card.Title>\n              <Card.Text>{pet.description}</Card.Text>\n            </Card.Body>\n          </Card>\n\n          {user && (\n            <div className=\"d-flex gap-2 mb-3\">\n              <Button\n                variant=\"outline-success\"\n                onClick={() => handleVote(\"up\")}\n                disabled={!pet.available}\n              >\n                <i className=\"fas fa-thumbs-up me-1\"></i>\n                Upvote ({pet.votes?.up || 0})\n              </Button>\n              <Button\n                variant=\"outline-danger\"\n                onClick={() => handleVote(\"down\")}\n                disabled={!pet.available}\n              >\n                <i className=\"fas fa-thumbs-down me-1\"></i>\n                Downvote ({pet.votes?.down || 0})\n              </Button>\n            </div>\n          )}\n\n          <Link to=\"/contact\" className=\"btn btn-primary btn-lg\">\n            <i className=\"fas fa-envelope me-2\"></i>\n            Contact About {pet.name}\n          </Link>\n        </Col>\n      </Row>\n\n      <Row className=\"mt-5\">\n        <Col>\n          <h3>Ratings & Reviews</h3>\n\n          {pet.ratings && pet.ratings.length > 0 && (\n            <div className=\"mb-3\">\n              <div className=\"d-flex align-items-center mb-2\">\n                <div className=\"display-6 me-3\">{pet.averageRating}</div>\n                <div>\n                  <div>\n                    {[...Array(5)].map((_, i) => (\n                      <i\n                        key={i}\n                        className={`fas fa-star ${\n                          i < Math.floor(pet.averageRating)\n                            ? \"text-warning\"\n                            : \"text-muted\"\n                        }`}\n                      ></i>\n                    ))}\n                  </div>\n                  <small className=\"text-muted\">\n                    Based on {pet.ratings.length} review\n                    {pet.ratings.length !== 1 ? \"s\" : \"\"}\n                  </small>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {user && (\n            <Card className=\"mb-4\">\n              <Card.Body>\n                <Card.Title>Leave a Review</Card.Title>\n                <Form onSubmit={handleRating}>\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Rating</Form.Label>\n                    <Form.Select\n                      value={rating}\n                      onChange={(e) => setRating(parseInt(e.target.value))}\n                    >\n                      <option value={5}>5 Stars - Excellent</option>\n                      <option value={4}>4 Stars - Very Good</option>\n                      <option value={3}>3 Stars - Good</option>\n                      <option value={2}>2 Stars - Fair</option>\n                      <option value={1}>1 Star - Poor</option>\n                    </Form.Select>\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Comment (Optional)</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={3}\n                      value={comment}\n                      onChange={(e) => setComment(e.target.value)}\n                      placeholder=\"Share your thoughts about this pet...\"\n                    />\n                  </Form.Group>\n\n                  <Button\n                    type=\"submit\"\n                    variant=\"primary\"\n                    disabled={submittingRating}\n                  >\n                    {submittingRating ? \"Submitting...\" : \"Submit Review\"}\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          )}\n\n          {pet.ratings &&\n            pet.ratings.map((review, index) => (\n              <Card key={index} className=\"mb-3\">\n                <Card.Body>\n                  <div className=\"d-flex justify-content-between align-items-start mb-2\">\n                    <div>\n                      <strong>{review.user?.username || \"Anonymous\"}</strong>\n                      <div>\n                        {[...Array(5)].map((_, i) => (\n                          <i\n                            key={i}\n                            className={`fas fa-star ${\n                              i < review.rating ? \"text-warning\" : \"text-muted\"\n                            }`}\n                          ></i>\n                        ))}\n                      </div>\n                    </div>\n                    <small className=\"text-muted\">\n                      {new Date(review.createdAt).toLocaleDateString()}\n                    </small>\n                  </div>\n                  {review.comment && <Card.Text>{review.comment}</Card.Text>}\n                </Card.Body>\n              </Card>\n            ))}\n\n          {(!pet.ratings || pet.ratings.length === 0) && (\n            <Alert variant=\"info\">\n              No reviews yet. Be the first to review {pet.name}!\n            </Alert>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PetDetail;\n"],"names":["PetDetail","_pet$votes","_pet$votes2","id","useParams","user","useAuth","pet","setPet","useState","loading","setLoading","error","setError","rating","setRating","comment","setComment","submittingRating","setSubmittingRating","useEffect","async","response","api","get","concat","data","console","fetchPet","handleVote","post","voteType","refreshed","_jsx","Container","className","style","marginTop","children","Spinner","animation","role","_jsxs","Alert","variant","Link","to","Row","Col","md","Card","Img","src","image","alt","name","height","objectFit","Badge","bg","available","price","toLocaleString","Body","sm","type","breed","age","size","gender","Date","createdAt","toLocaleDateString","Title","Text","description","Button","onClick","disabled","votes","up","down","ratings","length","averageRating","Array","map","_","i","Math","floor","Form","onSubmit","e","preventDefault","Group","Label","Select","value","onChange","parseInt","target","Control","as","rows","placeholder","review","index","_review$user","username"],"sourceRoot":""}